From 309d3189451ec761098004e3dbcf5443df7146a4 Mon Sep 17 00:00:00 2001
From: Nobuhiko Tanibata <NOBUHIKO_TANIBATA@xddp.denso.co.jp>
Date: Wed, 10 Sep 2014 13:32:14 +0900
Subject: [PATCH 27/31] ivi-shell: send ivi_surface configure event when
 ivi_layout_surface configured signal emitted.

Signed-off-by: Nobuhiko Tanibata <NOBUHIKO_TANIBATA@xddp.denso.co.jp>
---
 ivi-shell/ivi-shell.c | 28 ++++++++++++++++++++++++++++
 1 file changed, 28 insertions(+)

diff --git a/ivi-shell/ivi-shell.c b/ivi-shell/ivi-shell.c
index bf4affd..468e66a 100644
--- a/ivi-shell/ivi-shell.c
+++ b/ivi-shell/ivi-shell.c
@@ -57,6 +57,7 @@ extern keyboard_key keyboard_key_func;
 
 struct ivi_shell_surface
 {
+    struct wl_resource* resource;
     struct ivi_shell *shell;
     struct ivi_layout_surface *layout_surface;
 
@@ -67,6 +68,8 @@ struct ivi_shell_surface
     int32_t height;
 
     struct wl_list link;
+
+    struct wl_listener configured_listener;
 };
 
 struct ivi_shell_setting
@@ -85,6 +88,8 @@ static struct ivi_layout_interface *ivi_layout;
  * Implementation of ivi_surface
  */
 
+static void surface_configure_notify(struct wl_listener *listener, void *data);
+
 static void
 ivi_shell_surface_configure(struct weston_surface *, int32_t, int32_t);
 
@@ -144,6 +149,7 @@ surface_destroy(struct wl_client *client, struct wl_resource *resource)
         ivisurf->surface->configure_private = NULL;
         ivisurf->surface = NULL;
         ivi_layout->surfaceSetNativeContent(NULL, 0, 0, ivisurf->id_surface);
+        ivi_layout->remove_surface_configured_listener(ivisurf->layout_surface, &ivisurf->configured_listener);
     }
 
     wl_resource_destroy(resource);
@@ -246,9 +252,13 @@ application_surface_create(struct wl_client *client,
         ivisurf->id_surface = id_surface;
     }
 
+    ivisurf->resource = res;
     ivisurf->width = 0;
     ivisurf->height = 0;
     ivisurf->layout_surface = layout_surface;
+    ivisurf->configured_listener.notify = surface_configure_notify;
+    ivi_layout->add_surface_configured_listener(layout_surface, &ivisurf->configured_listener);
+
     ivisurf->surface = weston_surface;
 
     weston_surface->configure = ivi_shell_surface_configure;
@@ -385,6 +395,24 @@ ivi_load_modules(struct weston_compositor *compositor, const char *modules,
 	return 0;
 }
 
+static void
+surface_configure_notify(struct wl_listener *listener, void *data)
+{
+    struct ivi_layout_surface* layout_surf =
+        (struct ivi_layout_surface*) data;
+
+    struct ivi_shell_surface *shell_surf =
+        container_of(listener,
+                     struct ivi_shell_surface,
+                     configured_listener);
+
+    int32_t dim[2] = {};
+    ivi_layout->get_surface_dimension(layout_surf, dim);
+
+    ivi_surface_send_configure(shell_surf->resource, dim[0], dim[1]);
+
+}
+
 WL_EXPORT int
 module_init(struct weston_compositor *compositor,
             int *argc, char *argv[])
-- 
1.9.3

